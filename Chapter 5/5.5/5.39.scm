(define (lexical-address-lookup addr env)
  (let ((frameNo (car addr))
        (index (cdr addr)))
      (if (zero? frameNo)
          (let ((val (list-ref (car env) index)))
            (if (eq? val `*unassigned*)
                (error "Unassigned variable looked up" addr)))          
          (lexical-address-lookup (cons (- frameNo 1) index) (cdr env)))))

(define (lexical-address-set! addr env val)
  (let ((frameNo (car addr))
        (index (cdr addr)))
      (if (= frameNo 0)
          (set-value-at-index! (car env) index val)
          (lexical-address-lookup (cons (- frameNo 1) index) (cdr env)))))

(define (set-value-at-index! lst index val)
  (if (zero? index)
      (set-car! lst val)
      (set-value-at-index! (cdr lst) (- index 1) val)))